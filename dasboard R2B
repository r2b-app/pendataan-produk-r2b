import React, { useState, useEffect } from "react";
import QRCode from "react-qr-code";
import { createClient } from "@supabase/supabase-js";

const supabaseUrl = import.meta.env.https://kpxxmfdcstteozbdnett.supabase.co;
const supabaseKey = import.meta.env.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtweHhtZmRjc3R0ZW96YmRuZXR0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgxNzcwNzcsImV4cCI6MjA2Mzc1MzA3N30.vURTMg28LtyJta71z8tdTxEJu_2Flh3a2keLh9qLzH0;
const supabase = createClient(supabaseUrl, supabaseKey);

function generateUniqueCode(existingCodes) {
  const today = new Date().toISOString().slice(0, 10).replace(/-/g, "");
  const prefix = `R2B-${today}-`;
  const todayCount = existingCodes.filter(code => code.startsWith(prefix)).length + 1;
  const paddedNumber = todayCount.toString().padStart(4, "0");
  return `${prefix}${paddedNumber}`;
}

export default function DashboardR2B() {
  const [products, setProducts] = useState([]);
  const [form, setForm] = useState({ name: "", umkm: "", weight: "" });

  useEffect(() => {
    fetchProducts();
  }, []);

  async function fetchProducts() {
    const { data, error } = await supabase.from("produk").select("*").order("date", { ascending: false });
    if (error) console.error("Error fetching data:", error);
    else setProducts(data);
  }

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setForm((prev) => ({ ...prev, [name]: value }));
  };

  const handleAddProduct = async () => {
    if (!form.name || !form.umkm || !form.weight) return alert("Mohon lengkapi semua data produk.");

    const existingCodes = products.map(p => p.code);
    const newCode = generateUniqueCode(existingCodes);
    const newProduct = {
      ...form,
      date: new Date().toISOString().slice(0, 10),
      status: "Masuk",
      code: newCode,
    };

    const { data, error } = await supabase.from("produk").insert([newProduct]);
    if (error) console.error("Error adding product:", error);
    else {
      fetchProducts();
      setForm({ name: "", umkm: "", weight: "" });
    }
  };

  return (
    <div className="flex min-h-screen bg-gray-50">
      {/* Sidebar */}
      <aside className="w-64 bg-blue-800 text-white p-4">
        <h2 className="text-xl font-bold mb-6">RUMAH RETORT BERSAMA</h2>
        <nav className="space-y-2">
          <a href="#" className="block py-2 px-3 bg-blue-700 rounded">Data Produk</a>
          <a href="#" className="block py-2 px-3 hover:bg-blue-700 rounded">Proses Retort</a>
          <a href="#" className="block py-2 px-3 hover:bg-blue-700 rounded">Inkubasi & Distribusi</a>
          <a href="#" className="block py-2 px-3 hover:bg-blue-700 rounded">Laporan</a>
          <a href="#" className="block py-2 px-3 hover:bg-blue-700 rounded">Pengaturan</a>
        </nav>
      </aside>

      {/* Main Content */}
      <main className="flex-1 p-6">
        <div className="flex justify-between items-center mb-4">
          <h1 className="text-2xl font-semibold">Data Produk</h1>
        </div>

        <div className="bg-white p-4 rounded shadow mb-6">
          <h2 className="text-lg font-semibold mb-2">Tambah Produk Baru</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <input name="name" value={form.name} onChange={handleInputChange} placeholder="Nama Produk" className="border p-2 rounded" />
            <input name="umkm" value={form.umkm} onChange={handleInputChange} placeholder="Nama UMKM" className="border p-2 rounded" />
            <input name="weight" value={form.weight} onChange={handleInputChange} placeholder="Berat (mis. 250 g)" className="border p-2 rounded" />
          </div>
          <button
            onClick={handleAddProduct}
            className="mt-4 bg-yellow-400 hover:bg-yellow-500 text-white px-4 py-2 rounded font-semibold"
          >
            + Simpan Produk
          </button>
        </div>

        <input
          type="text"
          placeholder="Cari produk"
          className="mb-4 px-4 py-2 border rounded w-full max-w-md"
        />

        <div className="overflow-x-auto">
          <table className="min-w-full bg-white rounded shadow">
            <thead>
              <tr className="bg-gray-100 text-left text-sm font-semibold text-gray-700">
                <th className="px-4 py-2">
